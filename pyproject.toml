[project]
name = "pghatch"
version = "0.0.1"
description = "Create a rest api for your PostgreSQL database"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "asyncpg>=0.30.0",
    "fastapi>=0.115.14",
    "pglast>=7.7",
    "psycopg>=3.2.9",
    "sqlmodel>=0.0.24",
    "uvicorn>=0.35.0",
]

[dependency-groups]
dev = [
    "ruff>=0.12.2",
]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.27.0",
    "factory-boy>=3.3.0",
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "--cov=pghatch",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=100",
    "--strict-markers",
    "--strict-config",
    "--asyncio-mode=auto",
]
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["pghatch"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
